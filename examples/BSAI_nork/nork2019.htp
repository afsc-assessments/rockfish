#if !defined(_NORK2019_)
#  define _NORK2019_

class model_data : public ad_comm{
  data_int styr;
  data_int styr_fish;
  data_int endyr;
  data_int yrs_r;
  data_int nages;
  data_int nages_dat;
  data_ivector ages;
  data_ivector ages_dat;
  data_int nselages;
  data_int rec_age;
  data_int nlen;
  data_ivector lengths;
  data_int nyrs_fish;
  data_ivector yrs_fish;
  data_vector catch_bio;
  data_int nyrs_srv3;
  data_ivector yrs_srv3;
  data_vector obs_srv3;
  data_vector obs_srv3_sd;
  data_vector obs_srv3_lower;
  data_vector obs_srv3_upper;
  data_matrix unbiasedages;
  data_matrix translen;
  data_int nyrs_fish_unbiased_ac;
  data_ivector yrs_fish_unbiased_ac;
  data_matrix oac_fish_unbiased;
  data_int nyrs_fish_lc;
  data_ivector yrs_fish_lc;
  data_matrix olc_fish;
  data_int nyrs_surv3_unbiased_ac;
  data_ivector yrs_surv3_unbiased_ac;
  data_matrix oac_surv3_unbiased;
  data_int nyrs_surv3_lc;
  data_ivector yrs_surv3_lc;
  data_matrix olc_surv3;
  data_matrix wt_pop;
  data_matrix wt_fsh;
  dmatrix wt_pop_bin;
  dmatrix wt_fsh_bin;
  data_number spawn_mo;
  data_int fyear_ac_option;
  data_int historic_catch;
  data_int sr_type;
  data_int fixedrec_yrs;
  data_number sigr;
  data_number priormeansurvq;
  data_number priorcvsurvq;
  data_number priormeanM;
  data_number priorcvM;
  data_int sel_option;
  data_int nbins;
  data_int sel_styr;
  data_int sel_fixedyrs;
  data_ivector binstart;
  data_number sigma_aslp;
  data_number sigma_a50;
  data_number sigma_dslp;
  data_number sigma_d50;
  data_int n_yr_nodes;
  data_int n_age_nodes;
  int isel_npar;
  int jsel_npar;
  data_int fs_option;
  data_number priorsdfishslopedev;
  data_number priorsdfisha50dev;
  double spmo_frac;
  data_number nages_mat;
  data_vector matages;
  data_number nages_T;
  data_vector ages_T;
  data_vector T_n;
  data_vector T_y;
  data_number nages_S;
  data_vector ages_S;
  data_vector S_n;
  data_vector S_y;
  data_vector mat_lambda;
  data_vector biomass2014;
  int styr_rec;
  int styr_rec_dev;
  int lastyr_rec;
  int i;
  int j;
  int k;
  int bincount;
  int styr_fut;
  int endyr_fut;
  int num_proj_Fs;
  dvector cv_srv3;
  int sr_phase;
  dmatrix tmp;
  dmatrix tmp2;
  int firstage;
  int excludeage;
  int endyr_r;
  int sel_endyr;
  int comp_yr_count;
  int surv_yr_count;
  int nyrs_fish_unbiased_ac_r;
  int nyrs_surv3_unbiased_ac_r;
  int nyrs_fish_lc_r;
  int nyrs_surv3_lc_r;
  int nyrs_srv3_r;
  int nyrs_srv_ebs_r;
  dmatrix rescaled_sel_fish;
  dvector rescaled_F;
  dvector recent_fish_sel;
  dvector recent_fish_wgts;
  dvector recent_pop_wgts;
  dvector yrs_fish_unbiased_ac_r;
  dvector yrs_surv3_unbiased_ac_r;
  dvector yrs_fish_lc_r;
  dvector yrs_surv3_lc_r;
  dmatrix oac_fish_unbiased_r;
  dmatrix olc_fish_r;
  dmatrix oac_surv3_unbiased_r;
  dmatrix olc_surv3_r;
  data_int phase_selcoff;
  data_int phase_logist_sel;
  data_int phase_f_sel_param;
  data_int phase_s_sel_param;
  data_int phase_srec;
  data_int phase_f40;
  data_int phase_proj;
  data_int phase_historic_F;
  data_int har_flag;
  data_int srv3_sel_constraint;
  data_vector raw_fish_unbiased_ac_samp;
  data_vector raw_fish_lc_samp;
  data_vector raw_surv3_unbiased_ac_samp;
  data_vector raw_surv3_lc_samp;
  data_vector lambda;
  dvector fish_unbiased_ac_samp_r;
  dvector fish_lc_samp_r;
  dvector surv3_unbiased_ac_samp_r;
  dvector surv3_lc_samp_r;
  data_vector compweights;
  int phase_f_sel_ascend;
  int phase_f_sel_descend;
  int phase_f_sel_par;
  int phase_a50_devs;
  int phase_aslope_devs;
  int phase_d50_devs;
  int phase_dslope_devs;
  ivector binindex;
  dvector scal_yr_nodes;
  dvector scal_age_nodes;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_vector offset;
  param_init_number sel_aslope_domfish;
  param_init_number sel_dslope_domfish;
  param_init_number sel_aslope_forfish;
  param_init_number sel_dslope_forfish;
  param_init_number sel_a50_domfish;
  param_init_number sel_d50_domfish;
  param_init_number sel_a50_forfish;
  param_init_number sel_d50_forfish;
  param_init_matrix sel_par;
  param_init_bounded_number sel_aslope_srv3;
  param_init_bounded_number sel_a50_srv3;
  param_init_bounded_dev_vector a50_devs;
  param_init_bounded_dev_vector aslope_devs;
  param_init_bounded_dev_vector d50_devs;
  param_init_bounded_dev_vector dslope_devs;
  param_number a_slptmp;
  param_number a50tmp;
  param_number d_slptmp;
  param_number d50tmp;
  param_matrix log_sel_fish;
  param_vector log_sel_srv3;
  param_matrix sel_fish;
  param_vector sel_srv3;
  param_number age1_srv_sel;
  param_init_bounded_number M;
  param_number surv;
  param_init_number log_avg_fmort;
  param_init_bounded_dev_vector fmort_dev;
  param_number avg_fmort_dev;
  param_matrix F;
  param_matrix Z;
  param_matrix S;
  param_matrix mort;
  param_matrix spawner_S;
  param_init_bounded_dev_vector rec_dev;
  param_init_number mean_log_rec;
  param_init_bounded_number log_rinit;
  param_matrix natage;
  param_vector natagetmp;
  param_matrix natage_bin;
  param_init_bounded_dev_vector fydev;
  param_stddev_vector totbiom;
  param_init_number historic_F;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value obj_fun;
  param_vector rec_like;
  param_vector prior_like;
  param_number surv_like;
  param_number catch_like;
  param_number fpen;
  param_number hf_pen;
  param_vector age_like;
  param_matrix effn;
  param_vector rmse;
  param_vector sel_like;
  param_number sprpen;
  param_vector sdnr;
  param_vector al_rmse;
  param_number mat_like;
  param_init_bounded_number q_srv3;
  param_vector pred_srv3;
  param_vector pred_catch;
  param_number ehc;
  param_matrix catage;
  param_matrix eac_fish_unbiased_mod;
  param_matrix eac_surv3_unbiased_mod;
  param_matrix eac_fish_unbiased_dat;
  param_matrix eac_surv3_unbiased_dat;
  param_matrix elc_fish;
  param_matrix elc_fish_tempages;
  param_matrix elc_surv3;
  param_matrix elc_surv3_tempages;
  param_number F40;
  param_number F35;
  param_number F30;
  param_number SB0;
  param_number SBF40;
  param_number SBF35;
  param_number SBF30;
  param_vector survey_nr;
  param_vector fac_nr;
  param_vector flc_nr;
  param_vector sac_nr;
  param_vector slc_nr;
  param_vector fac_mcian_wgt;
  param_vector flc_mcian_wgt;
  param_vector sac_mcian_wgt;
  param_vector slc_mcian_wgt;
  param_vector fac_mcian_wgt_inv;
  param_vector flc_mcian_wgt_inv;
  param_vector sac_mcian_wgt_inv;
  param_vector slc_mcian_wgt_inv;
  param_vector fac_nr_fran;
  param_vector flc_nr_fran;
  param_vector sac_nr_fran;
  param_vector slc_nr_fran;
  param_vector fac_resid;
  param_vector flc_resid;
  param_vector sac_resid;
  param_vector slc_resid;
  param_init_number log_rzero;
  param_number bzero;
  param_number rzero;
  param_stddev_vector sp_biom;
  param_stddev_vector est_rec;
  param_number alpha;
  param_number beta;
  param_init_bounded_number steepness;
  param_vector pred_rec;
  param_vector est_spb;
  param_vector chi;
  param_number sumrecdev;
  param_vector SRec_spawn;
  param_vector SRec_rec;
  param_vector xdum2;
  param_vector Mvec;
  param_init_bounded_number mat_beta1;
  param_init_bounded_number mat_beta2;
  param_vector mat_theta;
  param_vector maturity;
  param_stddev_vector maturity_bin;
  param_vector compweightsnew_ta12;
  param_vector compweightsnew_ta11;
  param_vector compweightsnew_ta18;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void get_maturity(void);
  void get_selectivity(void);
  void get_mortality(void);
  void get_first_year(void);
  void get_numbers_at_age(void);
 dvar_matrix get_projection_numbers_at_age();
  void get_expected_values(void);
  void get_sr_inputs(void);
  void get_catch_at_age(void);
  void get_age_comps(void);
  void get_binned(void);
 dvariable SRecruit(const dvariable& Stmp);
 dvar_vector SRecruit(const dvar_vector& Stmp);
  void evaluate_the_objective_function(void);
  void histFpen(void);
  void rec_likelihood(void);
  void age_likelihood(void);
  void prior(void);
 dvariable get_spr(dvariable Ftemp);
 dvariable get_spr_rates(double spr_percent);
  void srv_likelihood(void);
  void cat_likelihood(void);
  void Fmort_pen(void);
  void sel_likelihood(void);
  void mat_likelihood(void);
 dvar_vector cubic_spline(const dvar_vector& spline_coffs);
  void get_age10(void);
  void update_compweights(void);

};
#endif
